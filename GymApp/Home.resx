<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>